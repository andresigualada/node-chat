// Generated by CoffeeScript 1.9.2
(function() {
  module.exports = function(server) {
    var chatServer, messages, removeChatter, storeMessage, storeUser, users;
    chatServer = require('socket.io')(server);
    messages = [];
    users = [];
    storeUser = function(name) {
      return users.push(name);
    };
    storeMessage = function(name, data) {
      messages.push({
        name: name,
        data: data
      });
      if (messages.length > 20) {
        return messages.shift();
      }
    };
    removeChatter = function(chatter) {
      var user;
      console.log("users before: " + users.toString());
      users = (function() {
        var i, len, results;
        results = [];
        for (i = 0, len = users.length; i < len; i++) {
          user = users[i];
          if (user !== chatter) {
            results.push(user);
          }
        }
        return results;
      })();
      return console.log("users after: " + users.toString());
    };
    return chatServer.on('connection', function(client) {
      client.on('join', function(name) {
        console.log(name + " has joined the chat");
        storeUser(name);
        client.name = name;
        client.broadcast.emit('joined', name);
        users.forEach(function(username) {
          return client.emit('joined', username);
        });
        return messages.forEach(function(message) {
          return client.emit('message', message.name + ": " + message.data);
        });
      });
      client.on('message', function(message) {
        console.log(client.name + ": " + message);
        client.broadcast.emit('message', client.name + ": " + message);
        client.emit('message', client.name + ": " + message);
        return storeMessage(client.name, message);
      });
      return client.on('disconnect', function() {
        console.log(client.name + " has left the chat");
        removeChatter(client.name);
        return client.broadcast.emit('remove chatter', client.name);
      });
    });
  };

}).call(this);
